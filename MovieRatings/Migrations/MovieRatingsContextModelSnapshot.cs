// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieRatings.EFRepository;

namespace MovieRatings.Migrations
{
    [DbContext(typeof(MovieRatingsContext))]
    partial class MovieRatingsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieRatings.DomainTypes.CoreTypes.Genre", b =>
                {
                    b.Property<int>("GenreId");

                    b.Property<string>("GenreName")
                        .IsRequired();

                    b.HasKey("GenreId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("MovieRatings.DomainTypes.CoreTypes.Movie", b =>
                {
                    b.Property<int>("MovieId");

                    b.Property<int>("RunningTime");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<int>("YearOfRelease");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MovieRatings.DomainTypes.CoreTypes.MovieGenre", b =>
                {
                    b.Property<int>("MovieGenreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GenreId");

                    b.Property<int>("MovieId");

                    b.HasKey("MovieGenreId");

                    b.ToTable("MovieGenres");
                });

            modelBuilder.Entity("MovieRatings.DomainTypes.CoreTypes.User", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<string>("UserEmail")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MovieRatings.DomainTypes.CoreTypes.UserRating", b =>
                {
                    b.Property<int>("UserRatingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MovieId");

                    b.Property<int>("Rating");

                    b.Property<DateTime>("RatingDate");

                    b.Property<int>("UserId");

                    b.HasKey("UserRatingId");

                    b.ToTable("UserRatings");
                });

            modelBuilder.Entity("MovieRatings.DomainTypes.CoreTypes.Genre", b =>
                {
                    b.HasOne("MovieRatings.DomainTypes.CoreTypes.MovieGenre")
                        .WithMany("Genres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MovieRatings.DomainTypes.CoreTypes.Movie", b =>
                {
                    b.HasOne("MovieRatings.DomainTypes.CoreTypes.MovieGenre")
                        .WithMany("Movies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MovieRatings.DomainTypes.CoreTypes.UserRating")
                        .WithMany("Movies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MovieRatings.DomainTypes.CoreTypes.User", b =>
                {
                    b.HasOne("MovieRatings.DomainTypes.CoreTypes.UserRating")
                        .WithMany("Users")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
